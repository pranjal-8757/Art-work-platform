<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Art-page | Profile</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap');
        body { font-family: 'Inter', sans-serif; }
        
        /* Modal styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.9);
        }
        
        .modal-content {
            margin: auto;
            display: block;
            width: 80%;
            max-width: 700px;
            max-height: 80%;
            object-fit: contain;
        }
        
        .close {
            position: absolute;
            top: 15px;
            right: 35px;
            color: #f1f1f1;
            font-size: 40px;
            font-weight: bold;
            cursor: pointer;
        }
        
        .close:hover,
        .close:focus {
            color: #bbb;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="bg-zinc-900 text-white min-h-screen">
    <!-- Header Navigation -->
    <header class="bg-zinc-800 border-b border-zinc-700">
        <div class="max-w-6xl mx-auto px-6 py-4 flex items-center justify-between">
            <div class="flex items-center space-x-4">
                <div class="w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center">
                    <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                        <path d="M10 2L3 7v11a1 1 0 001 1h3v-6h6v6h3a1 1 0 001-1V7l-7-5z"/>
                    </svg>
                </div>
                <h1 class="text-xl font-semibold">Art-page</h1>
            </div>
            <button onclick="logout()" class="bg-red-600 hover:bg-red-700 px-4 py-2 rounded-lg text-sm font-medium transition-colors">
                Logout
            </button>
        </div>
    </header>

    <div class="max-w-6xl mx-auto px-6 py-8">
        <!-- Profile Header -->
        <div class="bg-zinc-800 rounded-lg p-6 mb-8">
            <div class="flex items-center space-x-6">
                <!-- Profile Avatar -->
                <div class="w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-2xl font-bold" id="profile-avatar">
                    J
                </div>
                
                <!-- Profile Info -->
                <div class="flex-1">
                    <h2 class="text-3xl font-semibold mb-1">
                        <span class="font-light text-zinc-300">Hello</span>, <span id="user-name">John Doe</span>
                    </h2>
                    <p class="text-zinc-400 text-lg">@<span id="username">johndoe</span></p>
                    <div class="flex items-center space-x-6 mt-3 text-sm text-zinc-400">
                        <span><span id="post-count">0</span> Posts</span>
                        <span>Member since <span id="member-since">January 1, 2024</span></span>
                    </div>
                </div>
            </div>
        </div>

        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Create Post Section -->
            <div class="lg:col-span-2">
                <div class="bg-zinc-800 rounded-lg p-6 mb-8">
                    <h3 class="text-xl font-medium mb-4">Create New Post</h3>
                    <form id="post-form" class="space-y-4">
                        <textarea 
                            id="post-content"
                            name="content" 
                            placeholder="What's on your mind? Share your creative thoughts..."
                            class="w-full h-32 p-4 bg-zinc-700 border border-zinc-600 rounded-lg text-white placeholder-zinc-400 resize-none focus:outline-none focus:border-blue-500 transition-all"
                            required
                        ></textarea>
                        
                        <!-- File Upload Section -->
                        <div class="space-y-3">
                            <label class="block text-sm font-medium text-zinc-300">Upload Your Art</label>
                            <div class="relative">
                                <input 
                                    type="file" 
                                    name="artwork" 
                                    accept="image/*"
                                    class="hidden" 
                                    id="file-upload"
                                    onchange="previewImage(event)"
                                >
                                <label 
                                    for="file-upload" 
                                    class="flex flex-col items-center justify-center w-full h-32 border-2 border-dashed border-zinc-600 rounded-lg cursor-pointer hover:border-blue-500 hover:bg-zinc-700/50 transition-all"
                                >
                                    <div class="flex flex-col items-center justify-center pt-5 pb-6">
                                        <svg class="w-8 h-8 mb-2 text-zinc-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"/>
                                        </svg>
                                        <p class="mb-2 text-sm text-zinc-400">
                                            <span class="font-medium">Click to upload</span> your artwork
                                        </p>
                                        <p class="text-xs text-zinc-500">PNG, JPG, GIF up to 10MB</p>
                                    </div>
                                </label>
                            </div>
                            
                            <!-- Image Preview -->
                            <div id="image-preview" class="hidden">
                                <div class="relative bg-zinc-700 rounded-lg p-4">
                                    <img id="preview-img" class="max-h-48 mx-auto rounded-lg" alt="Preview">
                                    <button 
                                        type="button" 
                                        onclick="removeImage()" 
                                        class="absolute top-2 right-2 bg-red-600 hover:bg-red-700 text-white rounded-full w-6 h-6 flex items-center justify-center text-sm"
                                    >
                                        Ã—
                                    </button>
                                    <p id="file-name" class="text-sm text-zinc-400 mt-2 text-center"></p>
                                </div>
                            </div>
                        </div>

                        <div class="flex space-x-3">
                            <button 
                                type="submit" 
                                class="bg-blue-600 hover:bg-blue-700 px-6 py-3 rounded-lg font-medium transition-colors"
                            >
                                Create New Post
                            </button>
                            <button 
                                type="button" 
                                onclick="clearForm()" 
                                class="bg-zinc-600 hover:bg-zinc-700 px-6 py-3 rounded-lg font-medium transition-colors"
                            >
                                Clear
                            </button>
                        </div>
                    </form>
                </div>

                <!-- Posts Section -->
                <div class="space-y-6">
                    <div class="flex items-center justify-between">
                        <h3 class="text-xl font-medium text-zinc-300">Your Posts</h3>
                        <span class="text-sm text-zinc-500"><span id="total-posts">0</span> total posts</span>
                    </div>

                    <div id="posts-container" class="space-y-4">
                        <div class="bg-zinc-800 rounded-lg p-8 text-center">
                            <div class="w-16 h-16 bg-zinc-700 rounded-full flex items-center justify-center mx-auto mb-4">
                                <svg class="w-8 h-8 text-zinc-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                                </svg>
                            </div>
                            <h4 class="text-lg font-medium text-zinc-300 mb-2">No posts yet</h4>
                            <p class="text-zinc-400">Create your first post to get started!</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="space-y-6">
                <!-- Profile Stats -->
                <div class="bg-zinc-800 rounded-lg p-6">
                    <h3 class="text-lg font-medium mb-4">Profile Stats</h3>
                    <div class="space-y-3">
                        <div class="flex justify-between">
                            <span class="text-zinc-400">Total Posts</span>
                            <span class="font-medium" id="sidebar-post-count">0</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-zinc-400">Total Likes</span>
                            <span class="font-medium" id="total-likes">0</span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-zinc-400">Account Type</span>
                            <span class="font-medium text-blue-400">Creator</span>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="bg-zinc-800 rounded-lg p-6">
                    <h3 class="text-lg font-medium mb-4">Quick Actions</h3>
                    <div class="space-y-3">
                        <button onclick="openSettings()" class="block w-full text-left px-4 py-2 bg-zinc-700 hover:bg-zinc-600 rounded-lg transition-colors">
                            Account Settings
                        </button>
                        <button onclick="explorePosts()" class="block w-full text-left px-4 py-2 bg-zinc-700 hover:bg-zinc-600 rounded-lg transition-colors">
                            Explore Posts
                        </button>
                        <button onclick="openHelp()" class="block w-full text-left px-4 py-2 bg-zinc-700 hover:bg-zinc-600 rounded-lg transition-colors">
                            Help & Support
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Image Modal -->
    <div id="imageModal" class="modal">
        <span class="close" onclick="closeImageModal()">&times;</span>
        <img class="modal-content" id="modal-img">
    </div>

    <script>
        // User data and posts storage
        let userData = {
            name: 'John Doe',
            username: 'johndoe',
            createdAt: new Date('2024-01-01'),
            posts: []
        };

        let postIdCounter = 1;

        // Initialize the page
        function initializePage() {
            updateProfileInfo();
            loadPosts();
        }

        // Update profile information
        function updateProfileInfo() {
            document.getElementById('user-name').textContent = userData.name;
            document.getElementById('username').textContent = userData.username;
            document.getElementById('profile-avatar').textContent = userData.name.charAt(0).toUpperCase();
            document.getElementById('member-since').textContent = userData.createdAt.toLocaleDateString();
            updatePostCounts();
        }

        // Update post counts
        function updatePostCounts() {
            const postCount = userData.posts.length;
            const totalLikes = userData.posts.reduce((total, post) => total + post.likes, 0);
            
            document.getElementById('post-count').textContent = postCount;
            document.getElementById('total-posts').textContent = postCount;
            document.getElementById('sidebar-post-count').textContent = postCount;
            document.getElementById('total-likes').textContent = totalLikes;
        }

        // Preview uploaded image
        function previewImage(event) {
            const file = event.target.files[0];
            if (file) {
                // Check file size (10MB limit)
                if (file.size > 10 * 1024 * 1024) {
                    alert('File size must be less than 10MB');
                    event.target.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('preview-img').src = e.target.result;
                    document.getElementById('file-name').textContent = file.name;
                    document.getElementById('image-preview').classList.remove('hidden');
                };
                reader.readAsDataURL(file);
            }
        }

        // Remove image preview
        function removeImage() {
            document.getElementById('file-upload').value = '';
            document.getElementById('image-preview').classList.add('hidden');
            document.getElementById('preview-img').src = '';
            document.getElementById('file-name').textContent = '';
        }

        // Clear form
        function clearForm() {
            document.getElementById('post-content').value = '';
            removeImage();
        }

        // Handle form submission
        document.getElementById('post-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const content = document.getElementById('post-content').value.trim();
            const fileInput = document.getElementById('file-upload');
            const file = fileInput.files[0];

            if (!content) {
                alert('Please enter some content for your post.');
                return;
            }

            // Create new post
            const newPost = {
                id: postIdCounter++,
                content: content,
                artwork: null,
                createdAt: new Date(),
                likes: 0,
                liked: false
            };

            // Handle image if uploaded
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    newPost.artwork = e.target.result;
                    addPost(newPost);
                };
                reader.readAsDataURL(file);
            } else {
                addPost(newPost);
            }
        });

        // Add post to userData and update display
        function addPost(post) {
            userData.posts.unshift(post); // Add to beginning of array
            clearForm();
            loadPosts();
            updatePostCounts();
            
            // Show success message
            showNotification('Post created successfully!', 'success');
        }

        // Load and display posts
        function loadPosts() {
            const postsContainer = document.getElementById('posts-container');
            
            if (userData.posts.length === 0) {
                postsContainer.innerHTML = `
                    <div class="bg-zinc-800 rounded-lg p-8 text-center">
                        <div class="w-16 h-16 bg-zinc-700 rounded-full flex items-center justify-center mx-auto mb-4">
                            <svg class="w-8 h-8 text-zinc-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4"></path>
                            </svg>
                        </div>
                        <h4 class="text-lg font-medium text-zinc-300 mb-2">No posts yet</h4>
                        <p class="text-zinc-400">Create your first post to get started!</p>
                    </div>
                `;
                return;
            }

            const postsHTML = userData.posts.map(post => `
                <article class="bg-zinc-800 rounded-lg p-6 hover:bg-zinc-750 transition-colors">
                    <!-- Post Header -->
                    <div class="flex items-center justify-between mb-4">
                        <div class="flex items-center space-x-3">
                            <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-sm font-bold">
                                ${userData.name.charAt(0).toUpperCase()}
                            </div>
                            <div>
                                <h4 class="font-medium">@${userData.username}</h4>
                                <p class="text-xs text-zinc-400">
                                    ${post.createdAt.toLocaleDateString()}
                                </p>
                            </div>
                        </div>
                        <button onclick="deletePost(${post.id})" class="text-red-400 hover:text-red-300 transition-colors">
                            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                            </svg>
                        </button>
                    </div>

                    <!-- Post Content -->
                    <div class="mb-4">
                        <p class="text-zinc-200 leading-relaxed mb-3">${post.content}</p>
                        
                        <!-- Artwork Display -->
                        ${post.artwork ? `
                            <div class="bg-zinc-900 rounded-lg p-2 mb-3">
                                <img 
                                    src="${post.artwork}" 
                                    alt="User artwork" 
                                    class="max-w-full h-auto rounded-lg cursor-pointer hover:opacity-90 transition-opacity"
                                    onclick="openImageModal('${post.artwork}')"
                                >
                            </div>
                        ` : ''}
                    </div>

                    <!-- Post Footer -->
                    <div class="flex items-center justify-between pt-4 border-t border-zinc-700">
                        <div class="flex items-center space-x-4">
                            <button 
                                onclick="toggleLike(${post.id})" 
                                class="flex items-center space-x-2 text-sm ${post.liked ? 'text-blue-400' : 'text-zinc-400'} hover:text-blue-300 transition-colors"
                            >
                                <svg class="w-4 h-4" fill="${post.liked ? 'currentColor' : 'none'}" stroke="currentColor" viewBox="0 0 20 20">
                                    <path ${post.liked ? 'fill-rule="evenodd"' : ''} d="M2 10.5a1.5 1.5 0 113 0v6a1.5 1.5 0 01-3 0v-6zM6 10.333v5.43a2 2 0 001.106 1.79l.05.025A4 4 0 008.943 18h5.416a2 2 0 001.962-1.608l1.2-6A2 2 0 0015.56 8H12V4a2 2 0 00-2-2 1 1 0 00-1 1v.667a4 4 0 01-.8 2.4L6.8 7.933a4 4 0 00-.8 2.4z"/>
                                </svg>
                                <span>${post.liked ? "Unlike" : "Like"}</span>
                                <span class="text-zinc-500">(${post.likes})</span>
                            </button>
                            <button 
                                onclick="editPost(${post.id})" 
                                class="flex items-center space-x-2 text-sm text-zinc-400 hover:text-zinc-300 transition-colors"
                            >
                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"/>
                                </svg>
                                <span>Edit</span>
                            </button>
                        </div>
                        ${post.artwork ? `
                            <div class="flex items-center space-x-2 text-xs text-zinc-500">
                                <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z" clip-rule="evenodd"/>
                                </svg>
                                <span>Artwork</span>
                            </div>
                        ` : ''}
                    </div>
                </article>
            `).join('');

            postsContainer.innerHTML = postsHTML;
        }

        // Toggle like on post
        function toggleLike(postId) {
            const post = userData.posts.find(p => p.id === postId);
            if (post) {
                post.liked = !post.liked;
                post.likes += post.liked ? 1 : -1;
                loadPosts();
                updatePostCounts();
            }
        }

        // Delete post
        function deletePost(postId) {
            if (confirm('Are you sure you want to delete this post?')) {
                userData.posts = userData.posts.filter(p => p.id !== postId);
                loadPosts();
                updatePostCounts();
                showNotification('Post deleted successfully!', 'success');
            }
        }

        // Edit post (simplified version)
        function editPost(postId) {
            const post = userData.posts.find(p => p.id === postId);
            if (post) {
                const newContent = prompt('Edit your post:', post.content);
                if (newContent && newContent.trim() !== '') {
                    post.content = newContent.trim();
                    loadPosts();
                    showNotification('Post updated successfully!', 'success');
                }
            }
        }

        // Open image modal
        function openImageModal(src) {
            document.getElementById('modal-img').src = src;
            document.getElementById('imageModal').style.display = 'block';
        }

        // Close image modal
        function closeImageModal() {
            document.getElementById('imageModal').style.display = 'none';
        }

        // Show notification
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white z-50 ${
                type === 'success' ? 'bg-green-600' : 
                type === 'error' ? 'bg-red-600' : 'bg-blue-600'
            }`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Quick action functions
        function openSettings() {
            showNotification('Settings page would open here', 'info');
        }

        function explorePosts() {
            showNotification('Explore page would open here', 'info');
        }

        function openHelp() {
            showNotification('Help page would open here', 'info');
        }

        function logout() {
            if (confirm('Are you sure you want to logout?')) {
                showNotification('Logging out...', 'info');
                // In a real app, this would redirect to login page
            }
        }

        // Close modal when clicking outside
        window.onclick = function(event) {
            const modal = document.getElementById('imageModal');
            if (event.target === modal) {
                closeImageModal();
            }
        }

        // Initialize the page when DOM is loaded
        document.addEventListener('DOMContentLoaded', initializePage);
    </script>
</body>
</html>